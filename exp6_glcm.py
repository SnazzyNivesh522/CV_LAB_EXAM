# -*- coding: utf-8 -*-
"""EXP6_GLCM.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Emxx_j8zFyjp7K7yYzGXsDQuYM2-AmwM
"""

import skimage

import matplotlib.pyplot as plt

image = skimage.data.camera()

print(image)

image.shape

plt.imshow(image,cmap='gray')

image_1=image[0:32,0:32]
plt.imshow(image_1,cmap='gray')

image_2=image[64:96,64:96]
plt.imshow(image_2,cmap='gray')

image_3=image[64:96,384:416]
plt.imshow(image_3,cmap='gray')

image_4=image[0:32,300:332]
plt.imshow(image_4,cmap='gray')

sky=[image_1,image_2,image_3,image_4]

plt.imshow(image,cmap='gray')

#now for grass regions
image_5=image[400:432,160:192]

plt.imshow(image_5,cmap='gray')

image_6=image[400:432,320:352]

plt.imshow(image_6,cmap='gray')

image_7=image[240:272,400:432]
plt.imshow(image_7,cmap='gray')

image_8=image[450:482,450:482]
plt.imshow(image_8,cmap='gray')

grass=[image_5,image_6,image_7,image_8]

region_image=[sky,grass]

fig,ax=plt.subplots(2,4,figsize=(30,30))
for i in range(2):
    for j in range(4):
        ax[i,j].imshow(region_image[i][j],cmap='gray')
        if i==0:
            ax[i,j].set_title('sky')
        else:
            ax[i,j].set_title('grass')

plt.show()

#calculate glcm matrix for sky and grass regions
from skimage.feature import graycomatrix

glcm_sky=[]
for i in range(4):
    glcm_sky.append(graycomatrix(region_image[0][i], [1], [0], levels=256))

glcm_grass=[]
for i in range(4):
    glcm_grass.append(graycomatrix(region_image[1][i], [1], [0], levels=256))

glcm=[glcm_sky,glcm_grass]

fig,ax=plt.subplots(2,4,figsize=(30,30))
for i in range(2):
    for j in range(4):
        ax[i,j].imshow(glcm[i][j][:,:,0,0],cmap='gray')
        if i==0:
            ax[i,j].set_title('GLCM for sky')
        else:
            ax[i,j].set_title('GLCM for grass')

plt.show()

features=['contrast','dissimilarity','correlation','homogeneity','energy']

import numpy as np
#create a empty array of shape 5x2x4
textures=np.zeros((5,2,4))

for k,f in enumerate(features):
    for i in range(2):
        for j in range(4):
            textures[k,i,j]=skimage.feature.graycoprops(glcm[i][j], f)[0, 0]

textures.shape

textures

#plot different features for sky and grass regions

plt.scatter(textures[0,0,:],textures[1,0,:],c=textures[2,0,:],marker='*')
plt.scatter(textures[0,1,:],textures[1,1,:],c=textures[2,1,:],marker='o')
plt.xlabel('contrast')
plt.ylabel('dissimilarity')

from skimage import data
import matplotlib.pyplot as plt
from skimage.feature import graycomatrix, graycoprops
from numpy import pi
from numpy import zeros
from mpl_toolkits.mplot3d import Axes3D
import pandas as pd
import matplotlib.patches as patches

image = data.camera()

region_size = (32, 32)
sky_crs = [(0, 0), (64, 64), (384, 64), (300, 0)]
grass_crs = [(160, 400), (320, 400), (400, 240), (450, 450)]
fig, ax = plt.subplots(figsize=(6, 6))
ax.imshow(image, cmap='gray')
ax.set_title('Original Image with Marked Patches')
for crs in sky_crs:
    rect = patches.Rectangle(crs, region_size[0], region_size[1], linewidth=2, edgecolor='r', facecolor='none')
    ax.add_patch(rect)

# Create and add rectangles for grass patches (blue color)
for crs in grass_crs:
    rect = patches.Rectangle(crs, region_size[0], region_size[1], linewidth=2, edgecolor='b', facecolor='none')
    ax.add_patch(rect)

plt.imshow(image[384:384+32,64:64+32],cmap='gray')

plt.imshow(image[64:96,384:416],cmap='gray')

import skimage.io as io

# Assuming 'img' is your image array
io.imsave('output_image.png', image)

import numpy as np
from skimage.feature import graycomatrix

#45 degree in radians
np.pi/4

matrix=[[0,1,1,2],[2,2,0,1],[3,0,1,3],[0,3,2,2]]
matrix=np.array(matrix)
directions = [0, math.radians(90),-math.radians(45),-math.radians(135), -np.pi / 4]

#calculate GLCM matrix
glcm=graycomatrix(matrix, [1], directions, levels=4)

import math
math.radians(135)

matrix

glcm.shape

glcm[:,:,0,0]

glcm[:,:,0,1]

glcm[:,:,0,2]

glcm[:,:,0,3]

glcm[:,:,0,4]